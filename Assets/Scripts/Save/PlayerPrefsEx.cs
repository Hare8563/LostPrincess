// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.17020
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
using System.Xml;
using System.Collections.Generic;

namespace AssemblyCSharp
{
    public class PlayerPrefsEx
    {
        Dictionary<string, int> status;

        /// <summary>
        /// コンストラクタ
        /// </summary>
        public PlayerPrefsEx()
        {
            status = new Dictionary<string, int>();
        }

        /// <summary>
        /// Int型の値を保持する
        /// </summary>
        /// <param name="key">Keyの値</param>
        /// <param name="val">保存する値</param>
        public void SetInt(string key, int val)
        {
            if (status.ContainsKey(key))
            {
                status[key] = val;
            }
            else
            {
                status.Add(key, val);
            }
        }

        /// <summary>
        /// データをセーブする
        /// </summary>
        /// <param name="path">セーブする場所</param>
        public void Save(string path)
        {
            XmlDocument document = new XmlDocument();

            XmlDeclaration declaration = document.CreateXmlDeclaration("1.0", "UTF-8", null);
            XmlElement root = document.CreateElement("root");
            document.AppendChild(declaration);
            document.AppendChild(root);

            foreach(var val in status)
            {
             XmlElement KVKey = document.CreateElement("key");
                KVKey.InnerText = val.Key;
             XmlElement KVValue = document.CreateElement("integer");
                KVValue.InnerText = val.Value.ToString();

             root.AppendChild(KVKey);
             root.AppendChild(KVValue);
            }

            document.Save(path);
        }

        /// <summary>
        /// 指定したセーブデータをロードする
        /// </summary>
        /// <param name="path">セーブデータのファイルパス</param>
        public void Load(string path)
        {
            XmlDocument document = new XmlDocument();
            document.Load(path);
            string KVKey="";
            foreach (XmlElement elem in document.DocumentElement)
            {
                if (elem.Name == "key")
                {
                    KVKey = elem.InnerText;
                }
                else if (elem.Name == "integer")
                {
                    if (status.ContainsKey(KVKey))
                    {
                        status[KVKey] = int.Parse(elem.InnerText);
                    }
                    else
                    {
                        status.Add(KVKey, int.Parse(elem.InnerText));
                    }
                }
            }
        }

        /// <summary>
        /// Keyとなる値から値を取得する
        /// </summary>
        /// <returns>The int.</returns>
        /// <param name="key">Keyとなる値</param>
        public int GetInt(string key)
        {
            return status[key];
        }
    }
}

